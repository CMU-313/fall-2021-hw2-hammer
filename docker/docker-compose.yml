version: '3.7'

networks:
  bridge:
    driver: bridge

services:
  app:
    depends_on:
      - db
      - results
      # Enable to use RabbitMQ
      #- rabbitmq
    environment: &mayan_env
      # Enable to use RabbitMQ
      # MAYAN_CELERY_BROKER_URL: amqp://${MAYAN_RABBITMQ_USER:-mayan}:${MAYAN_RABBITMQ_PASSWORD:-mayanrabbitpass}@rabbitmq:5672/${MAYAN_RABBITMQ_VHOST:-mayan}
      # To use RabbitMQ as broker, disable Redis as broker
      MAYAN_CELERY_BROKER_URL: redis://:${MAYAN_REDIS_PASSWORD:-mayanredispassword}@results:6379/0
      MAYAN_CELERY_RESULT_BACKEND: redis://:${MAYAN_REDIS_PASSWORD:-mayanredispassword}@results:6379/1
      MAYAN_DATABASES: "{'default':{'ENGINE':'django.db.backends.postgresql','NAME':'${MAYAN_DATABASE_DB:-mayan}','PASSWORD':'${MAYAN_DATABASE_PASSWORD:-mayandbpass}','USER':'${MAYAN_DATABSE_USER:-mayan}','HOST':'db'}}"
      MAYAN_DOCKER_WAIT: "db:5432 results:6379"
      # Replace with the line below when using RabbitMQ
      # MAYAN_DOCKER_WAIT: "db:5432 results:6379 rabbitmq:5672"
    image: mayanedms/mayanedms:3
    networks:
      - bridge
    ports:
      - "80:8000"
    restart: unless-stopped
    volumes:
      - ${MAYAN_APP_VOLUME:-app}:/var/lib/mayan

  db:
    environment:
      POSTGRES_DB: ${MAYAN_DATABASE_DB:-mayan}
      POSTGRES_PASSWORD: ${MAYAN_DATABASE_PASSWORD:-mayandbpass}
      POSTGRES_USER: ${MAYAN_DATABSE_USER:-mayan}
    image: postgres:9.6-alpine
    networks:
      - bridge
    restart: unless-stopped
    volumes:
      - ${MAYAN_POSTGRES_VOLUME:-postgres}:/var/lib/postgresql/data

  results:
    command:
      - redis-server
      - --appendonly
      - "no"
      - --databases
      - "2"
      - --maxmemory
      - "100mb"
      - --maxclients
      - "500"
      - --maxmemory-policy
      - "allkeys-lru"
      - --save
      - ""
      - --tcp-backlog
      - "256"
      - --requirepass
      - "${MAYAN_REDIS_PASSWORD:-mayanredispassword}"
    image: redis:5.0-alpine
    networks:
      - bridge
    restart: unless-stopped
    volumes:
      - ${MAYAN_REDIS_VOLUME:-redis}:/data
  # Optional services

  # celery_flower:
  #   command:
  #     - run_celery
  #     - flower
  #   depends_on:
  #     - postgresql
  #     - results
  #     # Enable to use RabbitMQ
  #     # - rabbitmq
  #   environment:
  #     <<: *mayan_env
  #   image: mayanedms/mayanedms:3
  #   networks:
  #     - bridge
  #   ports:
  #     - "5555:5555"
  #   restart: unless-stopped

  # Enable to use RabbitMQ
  # rabbitmq:
  #   container_name: mayan-edms-rabbitmq
  #   hostname: mayan-edms-rabbitmq
  #   image: healthcheck/rabbitmq
  #   environment:
  #     RABBITMQ_DEFAULT_USER: ${MAYAN_RABBITMQ_USER:-mayan}
  #     RABBITMQ_DEFAULT_PASS: ${MAYAN_RABBITMQ_PASSWORD:-mayanrabbitpass}
  #     RABBITMQ_DEFAULT_VHOST: ${MAYAN_RABBITMQ_VHOST:-mayan}
  #   networks:
  #     - bridge
  #   restart: unless-stopped
  #   volumes:
  #      - ${MAYAN_RABBITMQ_VOLUME:-rabbitmq}:/var/lib/rabbitmq

  # Enable to run standalone workers
  # worker_fast:
  #   command:
  #     - run_worker
  #     - fast
  #   depends_on:
  #     - db
  #     - results
  #     # Enable to use RabbitMQ
  #     # - rabbitmq
  #   environment:
  #     <<: *mayan_env
  #   image: mayanedms/mayanedms:3
  #   networks:
  #     - bridge
  #   restart: unless-stopped
  #   volumes:
  #     - ${MAYAN_APP_VOLUME:-app}:/var/lib/mayan

  # Enable to run frontend gunicorn
  # frontend:
  #   command:
  #     - run_frontend
  #   depends_on:
  #     - db
  #     - results
  #     # Enable to use RabbitMQ
  #     # - rabbitmq
  #   environment:
  #     <<: *mayan_env
  #   image: mayanedms/mayanedms:3
  #   networks:
  #     - bridge
  #   ports:
  #     - "81:8000"
  #   restart: unless-stopped
  #   volumes:
  #     - ${MAYAN_APP_VOLUME:-app}:/var/lib/mayan

volumes:
  app:
  postgres:
  rabbitmq:
  redis:
